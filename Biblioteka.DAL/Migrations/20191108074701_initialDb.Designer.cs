// <auto-generated />
using System;
using Biblioteka.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Oracle.EntityFrameworkCore.Metadata;

namespace Biblioteka.DAL.Migrations
{
    [DbContext(typeof(LibContext))]
    [Migration("20191108074701_initialDb")]
    partial class initialDb
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.IdentityColumn)
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            modelBuilder.Entity("Biblioteka.DAL.Entities.Autor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Adresa");

                    b.Property<string>("Email");

                    b.Property<string>("Ime");

                    b.Property<DateTime>("Kreiran");

                    b.Property<bool>("Obrisan");

                    b.Property<string>("Prezime");

                    b.HasKey("Id");

                    b.ToTable("Autori");
                });

            modelBuilder.Entity("Biblioteka.DAL.Entities.AutorKnjiga", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("AutorId");

                    b.Property<int?>("KnjigaId");

                    b.HasKey("Id");

                    b.HasIndex("AutorId");

                    b.HasIndex("KnjigaId");

                    b.ToTable("AutoriKnjige");
                });

            modelBuilder.Entity("Biblioteka.DAL.Entities.Izdavac", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Adresa");

                    b.Property<string>("Ime");

                    b.Property<DateTime>("Kreiran");

                    b.Property<bool>("Obrisan");

                    b.HasKey("Id");

                    b.ToTable("Izdavaci");
                });

            modelBuilder.Entity("Biblioteka.DAL.Entities.Knjiga", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Adresa");

                    b.Property<decimal>("Cijena");

                    b.Property<int?>("IzdavacId");

                    b.Property<DateTime>("Kreiran");

                    b.Property<string>("Naslov");

                    b.Property<bool>("Obrisan");

                    b.HasKey("Id");

                    b.HasIndex("IzdavacId");

                    b.ToTable("Knjige");
                });

            modelBuilder.Entity("Biblioteka.DAL.Entities.AutorKnjiga", b =>
                {
                    b.HasOne("Biblioteka.DAL.Entities.Autor", "Autor")
                        .WithMany("Knjige")
                        .HasForeignKey("AutorId");

                    b.HasOne("Biblioteka.DAL.Entities.Knjiga", "Knjiga")
                        .WithMany("Autori")
                        .HasForeignKey("KnjigaId");
                });

            modelBuilder.Entity("Biblioteka.DAL.Entities.Knjiga", b =>
                {
                    b.HasOne("Biblioteka.DAL.Entities.Izdavac", "Izdavac")
                        .WithMany("Knjige")
                        .HasForeignKey("IzdavacId");
                });
#pragma warning restore 612, 618
        }
    }
}
